{"version":3,"file":"static/js/107.8f23234c.chunk.js","mappings":"qIAGMA,EAAeC,EAAAA,EAAAA,IAAW,CAC9BC,OAAQ,iBACRC,QAAS,WACTC,MAAO,cACPC,SAAU,IACVC,WAAY,2DACZC,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,MAAO,OACPC,OAAQ,YAQJC,EAAwB,SAAH,GAA+B,IAAzBC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SACxC,OAAO,SAACd,EAAY,CAACa,QAASA,EAAQ,SAAEC,GAC1C,EAEA,IAAeC,EAAAA,KAAWH,E,mHCd1BI,EAAAA,GAAAA,SAAiBC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAcC,EAAAA,GAAaC,EAAAA,IACxE,IAAMC,EAAU,CACdC,OAAQ,CACNpB,QAAS,CACPqB,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAGVC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,MAAO,CACL7B,QAAS,GACT8B,SAAS,GAEXC,MAAO,CACLD,SAAS,IAGbE,EAAG,CACDH,MAAO,CAAEtB,MAAO,QAChB0B,KAAM,CACJ1B,MAAO,cAMT2B,EAAS,CACb,UACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WAGIC,EAAO,CACXD,OAAAA,EACAE,SAAU,CACR,CACEC,MAAO,YACPF,KAAMD,EAAOI,KAAI,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAe,IACtDC,YAAa,UACbC,gBAAiB,WAEnB,CACEN,MAAO,YACPF,KAAMD,EAAOI,KAAI,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAe,IACtDC,YAAa,UACbC,gBAAiB,aAKjBC,EAAU9C,EAAAA,EAAAA,IAAW,CACzB6C,gBAAiB,UACjB1C,MAAO,OACP4C,OAAQ,IACRC,SAAU,aAENC,EAAYjD,EAAAA,EAAAA,IAAW,CAC3BgD,SAAU,WACV9C,QAAS,YACTwB,KAAM,EACNH,IAAK,EACLS,QAAS,OACTkB,UAAW,GACXC,WAAY,SACZ1C,MAAO,OACP2C,cAAe,YACf,qBAAsB,CACpBC,KAAM,yBAER,kBAAmB,CACjBA,KAAM,2BAGJC,EAAWtD,EAAAA,EAAAA,IAAW,CAC1BgD,SAAU,WACV9C,QAAS,YACTwB,KAAM,EACND,OAAQ,EACRO,QAAS,OACTkB,UAAW,KAKPK,EAAWvD,EAAAA,EAAAA,KAA0B,SAACwD,GAAK,MAAM,CACrDtD,QAAS,WACTuD,aAAc,GACdZ,gBAAiBW,EAAME,OAAS,UAAY,OAC5CjD,MAAO+C,EAAME,OAAS,OAAS,UAC/BhD,OAAQ,UACRiD,WAAY,WACZ,UAAW,CACTd,gBAAiB,UACjBpC,MAAO,QAEV,IAEKmD,EAAiB,WACrB,OACE,UAACd,EAAO,CAACe,GAAG,WAAU,WACpB,SAAC,KAAI,CAACxC,QAASA,EAASgB,KAAMA,KAC9B,UAACY,EAAS,YACR,oCAEE,kBAAM,aAGR,6CAEF,UAACK,EAAQ,YACP,SAACC,EAAQ,sBACT,SAACA,EAAQ,sBACT,SAACA,EAAQ,sBACT,SAACA,EAAQ,CAACG,QAAM,2BAIxB,EAEA,EAAe5C,EAAAA,KAAW8C,GCzIpBE,EAAgB9D,EAAAA,EAAAA,IAAW,CAC/BE,QAAS,SACT8B,QAAS,OACTkB,UAAW,KAEPa,EAAa/D,EAAAA,EAAAA,EAAS,CAC1BgE,KAAM,EACNnB,gBAAiB,UACjB3C,QAAS,GACT+D,UAAW,aACXvD,OAAQ,UACRiD,WAAY,kBACZ,UAAW,CACTd,gBAAiB,aAGfqB,EAAclE,EAAAA,EAAAA,KAA6B,SAACwD,GAAK,MAAM,CAC3DxB,QAAS,OACTmC,cAAe,SACfC,OAAQ,GACRC,YAAa,MACblB,WAAY,SACZmB,eAAgB,SAChBtB,SAAU,WACV,WAAY,CACVuB,QAAS,KACTvB,SAAU,WACV7C,MAAO,OACP4C,OAAQ,OACRF,gBAAiB,OACjB2B,aAAc,cAEhB,UAAW,CACTD,QAAS,KACTlE,WAAW,oCAAD,OAAsCmD,EAAMiB,MAAK,iBACzC,IAAhBjB,EAAMiB,MAAc,SAAW,OAAM,qBAEvCzB,SAAU,WACV7C,MAAO,OACP4C,OAAQ,OACRyB,aAAc,aACdE,QAAS,GACTC,eAAgB,SAEnB,IACKvD,EAAQpB,EAAAA,EAAAA,KAAY,CACxBoD,cAAe,YACf3C,MAAO,UACP4C,KAAM,wBACNuB,OAAQ,IAEJC,EAAc7E,EAAAA,EAAAA,KAAY,CAC9B6C,gBAAiB,UACjBpC,MAAO,OACPH,SAAU,GACVC,WAAY,OACZqE,OAAQ,EACR1E,QAAS,WAGL4E,EAAmB,WACvB,IAAMC,GAAgBC,EAAAA,EAAAA,cACpB,SAACnB,GAAU,OAAK,WAAO,IAAD,EACO,QAA3B,EAAAoB,SAASC,eAAerB,UAAG,OAA3B,EAA6BsB,eAAe,CAAEC,SAAU,UAC1D,CAAC,GACD,IAGF,OACE,UAACtB,EAAa,YACZ,SAACC,EAAU,CAACnD,QAASmE,EAAc,YAAY,UAC7C,UAACb,EAAW,CAACO,MAAO,EAAE,WACpB,SAACrD,EAAK,2BACN,SAACyD,EAAW,2EAGhB,SAACd,EAAU,CAACnD,QAASmE,EAAc,cAAc,UAC/C,UAACb,EAAW,CAACO,MAAO,EAAE,WACpB,SAACrD,EAAK,2BACN,SAACyD,EAAW,qEAGhB,SAACd,EAAU,CAACnD,QAASmE,EAAc,WAAW,UAC5C,UAACb,EAAW,CAACO,MAAO,EAAE,WACpB,SAACrD,EAAK,wBACN,SAACyD,EAAW,oDAKtB,EAEA,EAAe/D,EAAAA,KAAWgE,G,kBC/FpBhC,EAAU9C,EAAAA,EAAAA,IAAW,CACzBqF,UAAW,GACXC,aAAc,KAEVlE,EAAQpB,EAAAA,EAAAA,IAAW,CACvBqD,KAAM,wBACND,cAAe,cAEXmC,EAAYvF,EAAAA,EAAAA,GAAU,CAC1BgC,QAAS,OACTwD,SAAU,OACVtC,UAAW,GACXkB,OAAQ,KAEJqB,EAAYzF,EAAAA,EAAAA,GAAU,CAC1BgE,KAAM,kBACN9D,QAAS,iBACTwF,OAAQ,oBACRrB,YAAa,MACbJ,UAAW,eAEP0B,EAAW3F,EAAAA,EAAAA,IAAW,CAC1BqD,KAAM,0BAEFuC,EAAU5F,EAAAA,EAAAA,IAAW,CACzBM,SAAU,GACVC,WAAY,OACZ8E,UAAW,IAGPhD,EAAO,IAAIwD,MAAM,IAAIC,KAAK,CAC9BC,KAAM,aACNC,KAAM,QACNzB,QAAQ,uiBAMJ0B,EAAc,WAClB,OAAoCC,EAAAA,EAAAA,UAHpB,GAGuC,eAAhDC,EAAU,KAAEC,EAAa,KAChC,GAAwCF,EAAAA,EAAAA,WAAS,GAAM,eAAhDG,EAAY,KAAEC,EAAe,MAEpCC,EAAAA,EAAAA,YACE,WACMlE,EAAKmE,OARG,GASVF,GAAgB,EAEpB,GAEA,CAACjE,IAGH,IAAMoE,GAAkBzB,EAAAA,EAAAA,cACtB,WACE,IAAM0B,EAAoBP,EAlBd,EAmBRO,GAAqBrE,EAAKmE,QAC5BF,GAAgB,GAElBF,EAAc3D,KAAKkE,IAAItE,EAAKmE,OAAQE,GACtC,GAEA,CAACrE,EAAM8D,IAGT,OACE,UAAC,EAAO,CAACtC,GAAG,UAAS,WACnB,SAAC,EAAK,wBACN,SAAC0B,EAAS,UACPlD,EAAKuE,MAAM,EAAGT,GAAY3D,KAAI,SAACqE,EAAMC,GAAG,OACvC,UAACrB,EAAS,YACR,SAACE,EAAQ,UAAEkB,EAAKd,QAChB,SAACJ,EAAQ,UAAEkB,EAAKb,QAChB,SAACJ,EAAO,UAAEiB,EAAKtC,YAHDuC,EAIJ,MAGfT,IACC,SAAC1F,EAAA,EAAM,CAACC,QAAS6F,EAAgB,kFAIzC,EAEA,EAAe3F,EAAAA,KAAWmF,GCrFpBnD,EAAU9C,EAAAA,EAAAA,IAAW,CACzBqF,UAAW,GACXxC,gBAAiB,UACjB1C,MAAO,OACP4C,OAAQ,IACR7C,QAAS,YACT+D,UAAW,aACX8C,SAAU,SACV/E,QAAS,OACTmC,cAAe,WAEXlB,EAAYjD,EAAAA,EAAAA,IAAW,CAC3BgC,QAAS,OACTkB,UAAW,GACXC,WAAY,SACZ1C,MAAO,OACP2C,cAAe,YACf,qBAAsB,CACpBC,KAAM,yBAER,kBAAmB,CACjBA,KAAM,2BAGJ2D,EAAehH,EAAAA,EAAAA,GAAU,CAC7BgC,QAAS,OACTwD,SAAU,OACVuB,SAAU,OACV,uBAAwB,CACtB5G,MAAO,GAET,6BAA8B,CAC5BE,WAAY,UACZoD,aAAc,GAEhB,6BAA8B,CAC5BpD,WAAY,UACZoD,aAAc,KAGZwD,EAAejH,EAAAA,EAAAA,GAAU,CAC7BgE,KAAM,MACN9D,QAAS,gBACT+D,UAAW,aACXxD,MAAO,OACPuC,SAAU,WACV,WAAY,CACVuB,QAAS,KACTpE,MAAO,EACP4C,OAAQ,EACRU,aAAc,MACdZ,gBAAiB,OACjBG,SAAU,WACVzB,IAAK,GACLG,KAAM,KAGJwC,EAAclE,EAAAA,EAAAA,IAAW,CAC7BgC,QAAS,OACTsC,eAAgB,gBAChBtB,SAAU,WACV9C,QAAS,YACTgH,aAAc,sBAEVC,EAAOnH,EAAAA,EAAAA,KAAY,CACvBS,MAAO,UACP4C,KAAM,wBACNrB,QAAS,UAELoF,EAAMpH,EAAAA,EAAAA,KAAY,CACtBS,MAAO,UACP4C,KAAM,0BAGFhB,EAAO,IAAIwD,MAAM,IAAIC,KAAK,CAC9B7D,MAAO,qEACPoF,KAAM,SACNV,IAAK,WAGDW,EAAiB,WACrB,OACE,UAAC,EAAO,CAACzD,GAAG,aAAY,WACtB,UAAC,EAAS,YACR,oCAEE,kBAAM,eAGR,6CAEF,SAACmD,EAAY,UACV3E,EAAKG,KAAI,SAACqE,EAAMC,GAAG,OAClB,SAACG,EAAY,WACX,UAAC,EAAW,YACV,2BACGJ,EAAK5E,OACN,SAACkF,EAAI,UAAEN,EAAKQ,WAEd,0BACE,SAACD,EAAG,UAAEP,EAAKF,YAPEG,EAUJ,QAKzB,EAEA,EAAehG,EAAAA,KAAWwG,GC1GpBxE,EAAU9C,EAAAA,EAAAA,IAAW,CACzBG,MAAO,OACPoH,SAAU,IACVrH,QAAS,SACTD,OAAQ,SAcV,EAXqB,WACnB,OACE,UAAC,EAAO,YACN,SAAC,EAAgB,KACjB,SAAC,EAAU,KACX,SAAC,EAAU,KACX,SAAC,EAAO,MAGd,C","sources":["components/Button/index.tsx","pages/MyRecord/BodyRecord.tsx","pages/MyRecord/ButtonNavigation.tsx","pages/MyRecord/MyDiary.tsx","pages/MyRecord/MyExercise.tsx","pages/MyRecord/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport React, { FC, MouseEventHandler, ReactNode } from 'react'\n\nconst StyledButton = styled.div({\n  margin: '28px auto 64px',\n  padding: '14px 4px',\n  width: 'fit-content',\n  minWidth: 296,\n  background: 'linear-gradient(32.95deg, #FFCC21 8.75%, #FF963C 86.64%)',\n  fontSize: 18,\n  lineHeight: '26px',\n  textAlign: 'center',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\ninterface PropsType {\n  onClick: MouseEventHandler<HTMLDivElement>\n  children: ReactNode\n}\n\nconst Button: FC<PropsType> = ({ onClick, children }) => {\n  return <StyledButton onClick={onClick}>{children}</StyledButton>\n}\n\nexport default React.memo(Button)\n","import styled from '@emotion/styled'\nimport {\n  CategoryScale,\n  Chart as ChartJS,\n  LinearScale,\n  LineElement,\n  PointElement,\n  Title,\n} from 'chart.js'\nimport React, { FC } from 'react'\nimport { Line } from 'react-chartjs-2'\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title)\nconst options = {\n  layout: {\n    padding: {\n      top: 54,\n      right: 48,\n      bottom: 48,\n      left: 54,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    y: {\n      ticks: {\n        padding: 32,\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n    },\n    x: {\n      ticks: { color: '#fff' },\n      grid: {\n        color: '#777777',\n      },\n    },\n  },\n}\n\nconst labels = [\n  '6月',\n  '7月',\n  '8月',\n  '9月',\n  '10月',\n  '11月',\n  '12月',\n  '1月',\n  '2月',\n  '3月',\n  '4月',\n  '5月',\n]\n\nconst data = {\n  labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: labels.map(() => Math.floor(Math.random() * 100)),\n      borderColor: '#FFCC21',\n      backgroundColor: '#FFCC21',\n    },\n    {\n      label: 'Dataset 2',\n      data: labels.map(() => Math.floor(Math.random() * 100)),\n      borderColor: '#8FE9D0',\n      backgroundColor: '#8FE9D0',\n    },\n  ],\n}\n\nconst Wrapper = styled.div({\n  backgroundColor: '#2E2E2E',\n  width: '100%',\n  height: 304,\n  position: 'relative',\n})\nconst TitleWrap = styled.div({\n  position: 'absolute',\n  padding: '16px 24px',\n  left: 0,\n  top: 0,\n  display: 'flex',\n  columnGap: 24,\n  alignItems: 'center',\n  color: '#fff',\n  textTransform: 'uppercase',\n  'span:first-of-type': {\n    font: '400 15px/18px \"Inter\"',\n  },\n  'span:last-child': {\n    font: '400 25px/27px \"Inter\"',\n  },\n})\nconst TypeWrap = styled.div({\n  position: 'absolute',\n  padding: '16px 24px',\n  left: 0,\n  bottom: 0,\n  display: 'flex',\n  columnGap: 16,\n})\ninterface TypeItemProps {\n  active?: boolean\n}\nconst TypeItem = styled.div<TypeItemProps>((props) => ({\n  padding: '2px 22px',\n  borderRadius: 11,\n  backgroundColor: props.active ? '#FFCC21' : '#fff',\n  color: props.active ? '#fff' : '#FFCC21',\n  cursor: 'pointer',\n  transition: 'all 0.3s',\n  '&:hover': {\n    backgroundColor: '#FFCC21',\n    color: '#fff',\n  },\n}))\n\nconst BodyRecord: FC = () => {\n  return (\n    <Wrapper id='myRecord'>\n      <Line options={options} data={data} />\n      <TitleWrap>\n        <span>\n          body\n          <br />\n          record\n        </span>\n        <span>2021.05.21</span>\n      </TitleWrap>\n      <TypeWrap>\n        <TypeItem>日</TypeItem>\n        <TypeItem>週</TypeItem>\n        <TypeItem>月</TypeItem>\n        <TypeItem active>年</TypeItem>\n      </TypeWrap>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(BodyRecord)\n","import styled from '@emotion/styled'\nimport React, { useCallback } from 'react'\n\ninterface ItemContentProps {\n  index: number\n}\n\nconst ButtonListing = styled.div({\n  padding: '56px 0',\n  display: 'flex',\n  columnGap: 48,\n})\nconst ButtonItem = styled.a({\n  flex: 1,\n  backgroundColor: '#FFCC21',\n  padding: 24,\n  boxSizing: 'border-box',\n  cursor: 'pointer',\n  transition: 'background 0.3s',\n  '&:hover': {\n    backgroundColor: '#FF963C',\n  },\n})\nconst ItemContent = styled.div<ItemContentProps>((props) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  rowGap: 10,\n  aspectRatio: '1/1',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#000',\n    mixBlendMode: 'luminosity',\n  },\n  '&:after': {\n    content: '\"\"',\n    background: `url(./healthy/images/MyRecommend-${props.index}.jpg) ${\n      props.index === 3 ? 'center' : 'left'\n    } center no-repeat`,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    mixBlendMode: 'luminosity',\n    opacity: 0.6,\n    backgroundSize: 'cover',\n  },\n}))\nconst Title = styled.span({\n  textTransform: 'uppercase',\n  color: '#FFCC21',\n  font: '400 25px/30px \"Inter\"',\n  zIndex: 3,\n})\nconst Description = styled.span({\n  backgroundColor: '#FF963C',\n  color: '#fff',\n  fontSize: 14,\n  lineHeight: '20px',\n  zIndex: 3,\n  padding: '0 16px',\n})\n\nconst ButtonNavigation = () => {\n  const onClickScroll = useCallback(\n    (id: string) => () => {\n      document.getElementById(id)?.scrollIntoView({ behavior: 'smooth' })\n    },\n    [],\n  )\n\n  return (\n    <ButtonListing>\n      <ButtonItem onClick={onClickScroll('myRecord')}>\n        <ItemContent index={1}>\n          <Title>body record</Title>\n          <Description>自分のカラダの記録</Description>\n        </ItemContent>\n      </ButtonItem>\n      <ButtonItem onClick={onClickScroll('myExercise')}>\n        <ItemContent index={2}>\n          <Title>my exercise</Title>\n          <Description>自分の運動の記録</Description>\n        </ItemContent>\n      </ButtonItem>\n      <ButtonItem onClick={onClickScroll('myDiary')}>\n        <ItemContent index={3}>\n          <Title>my diary</Title>\n          <Description>自分の日記</Description>\n        </ItemContent>\n      </ButtonItem>\n    </ButtonListing>\n  )\n}\n\nexport default React.memo(ButtonNavigation)\n","import styled from '@emotion/styled'\nimport Button from 'components/Button'\nimport React, { FC, useCallback, useEffect, useState } from 'react'\n\nconst Wrapper = styled.div({\n  marginTop: 56,\n  marginBottom: 64,\n})\nconst Title = styled.div({\n  font: '400 22px/27px \"Inter\"',\n  textTransform: 'uppercase',\n})\nconst DiaryWrap = styled.ul({\n  display: 'flex',\n  flexWrap: 'wrap',\n  columnGap: 12,\n  rowGap: 12,\n})\nconst DiaryItem = styled.li({\n  flex: 'calc(25% - 9px)',\n  padding: '16px 16px 28px',\n  border: 'solid 1px #707070',\n  aspectRatio: '1/1',\n  boxSizing: 'border-box',\n})\nconst DateTime = styled.div({\n  font: '400 18px/22px \"Inter\"',\n})\nconst Content = styled.div({\n  fontSize: 12,\n  lineHeight: '17px',\n  marginTop: 8,\n})\n\nconst data = new Array(40).fill({\n  date: '2021.05.21',\n  time: '23:25',\n  content: `私の日記の記録が一部表示されます。\n    テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト…`,\n})\n\nconst PAGE_SIZE = 8\n\nconst MyDiary: FC = () => {\n  const [diaryCount, setDiaryCount] = useState(PAGE_SIZE)\n  const [showLoadMore, setShowLoadMore] = useState(false)\n\n  useEffect(\n    () => {\n      if (data.length > PAGE_SIZE) {\n        setShowLoadMore(true)\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data],\n  )\n\n  const onClickLoadMore = useCallback(\n    () => {\n      const updatedDiaryCount = diaryCount + PAGE_SIZE\n      if (updatedDiaryCount >= data.length) {\n        setShowLoadMore(false)\n      }\n      setDiaryCount(Math.min(data.length, updatedDiaryCount))\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data, diaryCount],\n  )\n\n  return (\n    <Wrapper id='myDiary'>\n      <Title>my diary</Title>\n      <DiaryWrap>\n        {data.slice(0, diaryCount).map((item, idx) => (\n          <DiaryItem key={idx}>\n            <DateTime>{item.date}</DateTime>\n            <DateTime>{item.time}</DateTime>\n            <Content>{item.content}</Content>\n          </DiaryItem>\n        ))}\n      </DiaryWrap>\n      {showLoadMore && (\n        <Button onClick={onClickLoadMore}>自分の日記をもっと見る</Button>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MyDiary)\n","import styled from '@emotion/styled'\nimport React, { FC } from 'react'\n\nconst Wrapper = styled.div({\n  marginTop: 56,\n  backgroundColor: '#2E2E2E',\n  width: '100%',\n  height: 264,\n  padding: '16px 24px',\n  boxSizing: 'border-box',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column',\n})\nconst TitleWrap = styled.div({\n  display: 'flex',\n  columnGap: 24,\n  alignItems: 'center',\n  color: '#fff',\n  textTransform: 'uppercase',\n  'span:first-of-type': {\n    font: '400 15px/18px \"Inter\"',\n  },\n  'span:last-child': {\n    font: '400 25px/27px \"Inter\"',\n  },\n})\nconst ExerciseList = styled.ul({\n  display: 'flex',\n  flexWrap: 'wrap',\n  overflow: 'auto',\n  '&::-webkit-scrollbar': {\n    width: 6,\n  },\n  '&::-webkit-scrollbar-track': {\n    background: '#777777',\n    borderRadius: 3,\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: '#FFCC21',\n    borderRadius: 3,\n  },\n})\nconst ExerciseItem = styled.li({\n  flex: '50%',\n  padding: '0 32px 0 16px',\n  boxSizing: 'border-box',\n  color: '#fff',\n  position: 'relative',\n  '&:before': {\n    content: '\"\"',\n    width: 5,\n    height: 5,\n    borderRadius: '50%',\n    backgroundColor: '#fff',\n    position: 'absolute',\n    top: 16,\n    left: 0,\n  },\n})\nconst ItemContent = styled.div({\n  display: 'flex',\n  justifyContent: 'space-between',\n  position: 'relative',\n  padding: '8px 0 2px',\n  borderBottom: 'solid 1px #777777',\n})\nconst Kcal = styled.span({\n  color: '#FFCC21',\n  font: '400 15px/18px \"Inter\"',\n  display: 'block',\n})\nconst Min = styled.span({\n  color: '#FFCC21',\n  font: '400 18px/22px \"Inter\"',\n})\n\nconst data = new Array(50).fill({\n  title: '家事全般（立位・軽い）',\n  kcal: '26kcal',\n  min: '10 min',\n})\n\nconst MyExercise: FC = () => {\n  return (\n    <Wrapper id='myExercise'>\n      <TitleWrap>\n        <span>\n          body\n          <br />\n          exercise\n        </span>\n        <span>2021.05.21</span>\n      </TitleWrap>\n      <ExerciseList>\n        {data.map((item, idx) => (\n          <ExerciseItem key={idx}>\n            <ItemContent>\n              <div>\n                {item.title}\n                <Kcal>{item.kcal}</Kcal>\n              </div>\n              <div>\n                <Min>{item.min}</Min>\n              </div>\n            </ItemContent>\n          </ExerciseItem>\n        ))}\n      </ExerciseList>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MyExercise)\n","import styled from '@emotion/styled'\nimport { FC } from 'react'\nimport BodyRecord from './BodyRecord'\nimport ButtonNavigation from './ButtonNavigation'\nimport MyDiary from './MyDiary'\nimport MyExercise from './MyExercise'\n\nconst Wrapper = styled.div({\n  width: '100%',\n  maxWidth: 960,\n  padding: '0 16px',\n  margin: 'auto',\n})\n\nconst MyRecord: FC = () => {\n  return (\n    <Wrapper>\n      <ButtonNavigation />\n      <BodyRecord />\n      <MyExercise />\n      <MyDiary />\n    </Wrapper>\n  )\n}\n\nexport default MyRecord\n"],"names":["StyledButton","styled","margin","padding","width","minWidth","background","fontSize","lineHeight","textAlign","color","cursor","Button","onClick","children","React","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","options","layout","top","right","bottom","left","responsive","maintainAspectRatio","scales","y","ticks","display","title","x","grid","labels","data","datasets","label","map","Math","floor","random","borderColor","backgroundColor","Wrapper","height","position","TitleWrap","columnGap","alignItems","textTransform","font","TypeWrap","TypeItem","props","borderRadius","active","transition","BodyRecord","id","ButtonListing","ButtonItem","flex","boxSizing","ItemContent","flexDirection","rowGap","aspectRatio","justifyContent","content","mixBlendMode","index","opacity","backgroundSize","zIndex","Description","ButtonNavigation","onClickScroll","useCallback","document","getElementById","scrollIntoView","behavior","marginTop","marginBottom","DiaryWrap","flexWrap","DiaryItem","border","DateTime","Content","Array","fill","date","time","MyDiary","useState","diaryCount","setDiaryCount","showLoadMore","setShowLoadMore","useEffect","length","onClickLoadMore","updatedDiaryCount","min","slice","item","idx","overflow","ExerciseList","ExerciseItem","borderBottom","Kcal","Min","kcal","MyExercise","maxWidth"],"sourceRoot":""}