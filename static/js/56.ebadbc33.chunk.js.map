{"version":3,"file":"static/js/56.ebadbc33.chunk.js","mappings":"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","sources":["components/Button/index.tsx","pages/ColumnPage/Recommend.tsx","pages/ColumnPage/Listing.tsx","pages/ColumnPage/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport React, { FC, MouseEventHandler, ReactNode } from 'react'\n\nconst StyledButton = styled.div({\n  margin: '28px auto 64px',\n  padding: '14px 4px',\n  width: 'fit-content',\n  minWidth: 296,\n  background: 'linear-gradient(32.95deg, #FFCC21 8.75%, #FF963C 86.64%)',\n  fontSize: 18,\n  lineHeight: '26px',\n  textAlign: 'center',\n  color: '#fff',\n  cursor: 'pointer',\n})\n\ninterface PropsType {\n  onClick: MouseEventHandler<HTMLDivElement>\n  children: ReactNode\n}\n\nconst Button: FC<PropsType> = ({ onClick, children }) => {\n  return <StyledButton onClick={onClick}>{children}</StyledButton>\n}\n\nexport default React.memo(Button)\n","import React, { FC } from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div({\n  marginTop: 56,\n})\nconst List = styled.ul({\n  display: 'flex',\n  columnGap: 32,\n})\nconst Item = styled.li({\n  flex: 1,\n  backgroundColor: '#2E2E2E',\n  padding: '24px 8px',\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  rowGap: '18px',\n})\nconst Title = styled.span({\n  textTransform: 'uppercase',\n  font: '400 22px/27px \"Inter\"',\n  color: '#FFCC21',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    left: '50%',\n    bottom: -9,\n    transform: 'translate(-50%, 50%)',\n    width: 56,\n    borderTop: 'solid 1px #fff',\n  },\n})\nconst Description = styled.span({\n  fontSize: 18,\n  lineHeight: '26px',\n  color: '#fff',\n})\n\nconst Recommend: FC = () => {\n  return (\n    <Wrapper>\n      <List>\n        <Item>\n          <Title>recommended column</Title>\n          <Description>オススメ</Description>\n        </Item>\n        <Item>\n          <Title>recommended diet</Title>\n          <Description>ダイエット</Description>\n        </Item>\n        <Item>\n          <Title>recommended beauty</Title>\n          <Description>美容</Description>\n        </Item>\n        <Item>\n          <Title>recommended health</Title>\n          <Description>健康</Description>\n        </Item>\n      </List>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(Recommend)\n","import React, { FC, useCallback, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport Button from 'components/Button'\n\nconst Wrapper = styled.div({\n  marginTop: 56,\n  marginBottom: 64,\n})\nconst List = styled.ul({\n  display: 'flex',\n  flexWrap: 'wrap',\n  columnGap: 8,\n  rowGap: 18,\n  marginBottom: 24,\n})\nconst Item = styled.li({\n  flex: 'calc(25% - 6px)',\n})\nconst Image = styled.div({\n  position: 'relative',\n  lineHeight: 0,\n  img: {\n    aspectRatio: '1.625/1',\n  },\n})\nconst DateTime = styled.span({\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  padding: '3px 6px',\n  boxSizing: 'border-box',\n  backgroundColor: '#FFCC21',\n  color: '#fff',\n  font: '400 15px/30px \"Inter\"',\n})\nconst Title = styled.div({\n  marginTop: 8,\n  fontSize: 15,\n  lineHeight: '22px',\n  overflow: 'hidden',\n  display: '-webkit-box',\n  WebkitLineClamp: '2',\n  WebkitBoxOrient: 'vertical',\n})\nconst Tag = styled.div({\n  color: '#FF963C',\n  fontSize: 12,\n  lineHeight: '22px',\n})\n\nconst data = new Array(16).fill(null).map((_, idx) => ({\n  title:\n    '魚を食べて頭もカラダも元気に！知っておきたい魚を食べるメリ魚を食べて頭もカラダも元気に！知っておきたい魚を食べるメリ',\n  tags: ['#魚料理', '#和食', '#DHA'],\n  datetime: '2021.05.17 23:25',\n  url: `column-${(idx % 8) + 1}.jpg`,\n}))\n\nconst PAGE_SIZE = 8\n\nconst Listing: FC = () => {\n  const [count, setCount] = useState(PAGE_SIZE)\n  const [showLoadMore, setShowLoadMore] = useState(false)\n\n  useEffect(\n    () => {\n      if (data.length > PAGE_SIZE) {\n        setShowLoadMore(true)\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data],\n  )\n\n  const onClickLoadMore = useCallback(\n    () => {\n      const updatedCount = count + PAGE_SIZE\n      if (updatedCount >= data.length) {\n        setShowLoadMore(false)\n      }\n      setCount(Math.min(data.length, updatedCount))\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data, count],\n  )\n\n  return (\n    <Wrapper>\n      <List>\n        {data.slice(0, count).map((item, idx) => (\n          <Item key={idx}>\n            <Image>\n              <img\n                src={`/healthy/images/${item.url}`}\n                alt={`img-column-${idx + 1}`}\n              />\n              <DateTime>{item.datetime}</DateTime>\n            </Image>\n            <Title>{item.title}</Title>\n            <Tag>{item.tags.join(' ')}</Tag>\n          </Item>\n        ))}\n      </List>\n      {showLoadMore && (\n        <Button onClick={onClickLoadMore}>コラムをもっと見る</Button>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default React.memo(Listing)\n","import { FC } from 'react'\nimport styled from '@emotion/styled'\nimport Recommend from './Recommend'\nimport Listing from './Listing'\n\nconst Wrapper = styled.div({\n  width: '100%',\n  maxWidth: 960,\n  padding: '0 16px',\n  margin: 'auto',\n})\n\nconst ColumnPage: FC = () => {\n  return (\n    <Wrapper>\n      <Recommend />\n      <Listing />\n    </Wrapper>\n  )\n}\n\nexport default ColumnPage\n"],"names":["StyledButton","styled","margin","padding","width","minWidth","background","fontSize","lineHeight","textAlign","color","cursor","Button","onClick","children","React","Wrapper","marginTop","List","display","columnGap","Item","flex","backgroundColor","flexDirection","rowGap","Title","textTransform","font","position","content","left","bottom","transform","borderTop","Description","Recommend","marginBottom","flexWrap","Image","img","aspectRatio","DateTime","boxSizing","overflow","WebkitLineClamp","WebkitBoxOrient","Tag","data","Array","fill","map","_","idx","title","tags","datetime","url","Listing","useState","count","setCount","showLoadMore","setShowLoadMore","useEffect","length","onClickLoadMore","useCallback","updatedCount","Math","min","slice","item","src","alt","join","maxWidth"],"sourceRoot":""}